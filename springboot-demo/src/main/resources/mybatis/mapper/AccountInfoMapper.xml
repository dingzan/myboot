<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingzan.dao.AccountInfoMapper">
  <resultMap id="BaseResultMap" type="com.dingzan.domain.AccountInfo">
    <id column="trade_id" jdbcType="BIGINT" property="tradeId" />
    <result column="cus_id" jdbcType="BIGINT" property="cusId" />
    <result column="trade_account" jdbcType="VARCHAR" property="tradeAccount" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    trade_id, cus_id, trade_account, account_name, bank_name, bank_account
  </sql>
  <select id="selectByExample" parameterType="com.dingzan.domain.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_info
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_info
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dingzan.domain.AccountInfoExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dingzan.domain.AccountInfo">
    insert into account_info (trade_id, cus_id, trade_account, 
      account_name, bank_name, bank_account
      )
    values (#{tradeId,jdbcType=BIGINT}, #{cusId,jdbcType=BIGINT}, #{tradeAccount,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dingzan.domain.AccountInfo">
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="tradeAccount != null">
        trade_account,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeId != null">
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="cusId != null">
        #{cusId,jdbcType=BIGINT},
      </if>
      <if test="tradeAccount != null">
        #{tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dingzan.domain.AccountInfoExample" resultType="java.lang.Long">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=BIGINT},
      </if>
      <if test="record.cusId != null">
        cus_id = #{record.cusId,jdbcType=BIGINT},
      </if>
      <if test="record.tradeAccount != null">
        trade_account = #{record.tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set trade_id = #{record.tradeId,jdbcType=BIGINT},
      cus_id = #{record.cusId,jdbcType=BIGINT},
      trade_account = #{record.tradeAccount,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dingzan.domain.AccountInfo">
    update account_info
    <set>
      <if test="cusId != null">
        cus_id = #{cusId,jdbcType=BIGINT},
      </if>
      <if test="tradeAccount != null">
        trade_account = #{tradeAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
    </set>
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dingzan.domain.AccountInfo">
    update account_info
    set cus_id = #{cusId,jdbcType=BIGINT},
      trade_account = #{tradeAccount,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR}
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </update>
</mapper>